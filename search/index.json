[{"content":"As with every box I started with an nmap scan.\nIt shows 2 ports open, 80(http) and 3389(rdp)\nQuestion: What port is for the web server? Answer: 80\nQuestion: What port is for remote desktop service? Answer: 3389\nI first went to the website as I didn\u0026rsquo;t have credentials for rdp.\nI started with manual enumeration by going to /robots.txt which provided a possible password and 4 urls.\nQuestion: What is a possible password in one of the pages web crawlers check for? Answer: UmbracoIsTheBest!\nQuestion: What CMS is the website using? Answer: Umbraco\nQuestion: What is the domain of the website? Answer: anthem.com\nI went back to the homepage to see what other information I could gather. On the post \u0026ldquo;we are hiring\u0026rdquo; I found a potential email.\nI moved onto the second psot \u0026ldquo;a cheers to our it department\u0026rdquo;. It alludes to an admin but doesn\u0026rsquo;t directly name them.\nI searched the poem up and got the name \u0026ldquo;Solomon Grundy\u0026rdquo;.\nQuestion: What\u0026rsquo;s the name of the Administrator? Answer: Solomon Grundy\nWith this name we can assume the email address as the same format as the other one, the first letter of their first and last name followed by @anthem.com.\nQuestion: Can we find find the email address of the administrator? Answer: SG@anthem.com\nI checked the source code of the site for the first 4 flags using curl to send and recieve data and grep to find the flag within it.\nQuestion: What is flag 1? Answer: THM{L0L_WH0_US3S_M3T4}\nQuestion: What is flag 2? Answer: THM{G!T_G00D}\nQuestion: What is flag 3? Answer: THM{L0L_WH0_D15}\nQuestion: What is flag 3? Answer: THM{AN0TH3R_M3TA}\nWith that finished, I moved onto logging into umbraco using the \u0026ldquo;sg@anthem.com\u0026rdquo; and \u0026ldquo;UmbracoIsTheBest!\u0026rdquo;.\nI didnt find anything of use so I went onto trying to log in via rdp. I used remmina for this\nI logged in using the username \u0026ldquo;sg\u0026rdquo; and the password \u0026ldquo;UmbracoIsTheBest!\u0026rdquo;\nI then opened the user.txt file giving me the user flag.\nQuestion: Gain initial access to the machine, what is the contents of user.txt? Answer: THM{N00T_NO0T}\nI looked around for any interesting files and came accross the directory backup.\nInside backup was a text file called \u0026ldquo;restore\u0026rdquo; but I didn\u0026rsquo;t have permission to open it.\nI did however, have permission to change the permissions on it.\nI clicked on the edit button, then add and then add sg in the \u0026ldquo;enter the object name to select\u0026rdquo; area.\nThen clicked allow full control over the restore file to the user SG.\nOpeneing it gives us \u0026ldquo;ChangeMeBaby1MoreTime\u0026rdquo;.\nQuestion: Can we spot the admin password? Answer: ChangeMeBaby1MoreTime\nI then looked for the administrator\u0026rsquo;s files to get the root flag\nI found the root file on the admin\u0026rsquo;s dekstop.\nOpening that file gives us the final flag.\nQuestion: Escalate your privileges to root, what is the contents of root.txt? Answer: THM{Y0U_4R3_1337}\n","date":"2022-10-10T05:48:00-04:00","permalink":"https://ben-doyle44.github.io/p/anthem/","title":"Anthem"},{"content":"Started with a simple nmap scan.\nIt shows 4 ports open, 21(ftp), 80(http), 10000(http) and 55007(ssh).\nThen I logged onto the anonymous ftp service and grabbed the .info.txt file on it.\nQuestion: File extension after anon login Answer: .txt\nQuestion: What is on the highest port? Answer: ssh\nQuestion: What\u0026rsquo;s running on port 10000? Answer: webmin\nQuestion: Can you exploit the service running on that port? (yay/nay answer) Answer: nay\nI then read the .info.txt file.\nUsing quipquip I solved it getting \u0026ldquo;Just wanted to see if you find it. Pop. Remember: Enumeration is the key!\u0026rdquo;.\nSeems to be pretty useless so I then used gobuster to enumerate the first http service, port 80.\nI went to robots.txt to see what was disallowed. All the urls showed did not exist. It did however, have an encoded string at the bottom.\n\u0026ldquo;079 084 108 105 077 068 089 050 077 071 078 107 079 084 086 104 090 071 086 104 077 122 073 051 089 122 085 048 077 084 103 121 089 109 070 104 078 084 069 049 079 068 081 075\u0026rdquo;\nIt\u0026rsquo;s ASCII and you have to convert it to base64 and then to md5. The result you get is \u0026ldquo;kidding.\u0026rdquo;. It turns out /robots.txt is just a rabbit hole\nThe directory enumaration wasn\u0026rsquo;t useless though, as both /manual and /joomla are interesting. I looked at /joomla first.\nQuestion: What\u0026rsquo;s CMS can you access? Answer: joomla\nI moved onto enumerating /joomla using gobuster again.\nThe only one of any interest was /joomla/_test\nI did a search for sar2html and found a remote code execution on exploitdb\nI tested \u0026ldquo;http://10.10.168.219/joomla/_test/index.php?plot=;ls\u0026rdquo; to see if this rce worked as shown here:\nQuestion: The interesting file name in the folder? Answer: log.txt\nSo then I did \u0026ldquo;http://10.10.168.219/joomla/_test/index.php?plot=;cat%20log.txt\u0026rdquo; to see what was in log.txt, it worked. I got the ssh username: basterd and password: superduperp@$$.\nI logged into the user basterd and checked if they could run anything as root, they could not. There was also no flag so I knew I needed to get access to another user to get the user flag.\nI saw the backup.sh and was interested in that so I outputted it to the terminal. It showed me the username: stoner and password: superduperp@$$no1knows\nQuestion: Where was the other users pass stored(no extension, just the name)? Answer: backup\nI didn\u0026rsquo;t see anything else of use so I moved onto the stoner user.\nI got the user flag in stoner\u0026rsquo;s home directory.\nQuestion: user.txt Answer: You made it till here, well done.\nI ran sudo -l to check what I could now run.\nNothing of use there so I looked at what executables are of the SUID bit set.\nThe only one of interest is \u0026ldquo;find\u0026rdquo;.\nI searched for find on gtfobins\nQuestion: What did you exploit to get the privileged user? Answer: find\nThen I output root.txt to the terminal.\nQuestion: root.txt Answer: It wasn\u0026rsquo;t that hard, was it?\n","date":"2022-10-09T14:11:21-04:00","permalink":"https://ben-doyle44.github.io/p/boilerctf/","title":"BoilerCTF"},{"content":"I ran an nmap scan to know what ports are open and what is using them.\nIt shows 3 ports open, 21(ftp), 22(ssh) and 80(http)\nAnonymous login is allowed on the ftp service so I looked at that first. 2 text files were present so I grabbed them both.\nThe file locks.txt seems to be a list of password and task.txt is a message to somebody called \u0026ldquo;lin\u0026rdquo;, what I assumed to be a username.\nQuestion: Who wrote the task list? Answer: lin\nI used hydra on the ssh port with locks.txt as the wordlist and lin as the username.\nIt worked giving us the password \u0026ldquo;RedDr4gonSynd1cat3\u0026rdquo;\nQuestion: What service can you bruteforce with the text file found? Answer: ssh\nQuestion: What is the users password? Answer: RedDr4gonSynd1cat3\nI logged in and read the user.txt giving me the user flag.\nQuestion: user.txt Answer: THM{CR1M3_SyNd1C4T3}\nI used sudo -l to look at what could run as root.\nI saw tar could run as root with no password so I looked it up on gtfobins.\nThen I read root.txt giving me the root flag.\nQuestion: root.txt Answer: THM{80UN7Y_h4cK3r}\n","date":"2022-10-09T10:24:24-04:00","permalink":"https://ben-doyle44.github.io/p/bountyhacker/","title":"Bountyhacker"},{"content":"Starting with an nmap scan to see what ports are open and what is running on them.\nIt shows 4 ports open, 21(ftp), 22(ssh), 139(smb) and 445(smb).\nQuestion: Enumerate the machine. How many ports are open? Answer: 4\nQuestion: What service is running on port 21? Answer: ftp\nQuestion: What service is running on ports 139 and 445? Answer: smb\nSince anonymous login is enabled on the ftp port, I tried that first.\nLooking through the scripts directory it seems there is a bash script and 2 text files so I grabbed them all. The scripts directory is also writeable.\nThis is a bash script that delete files from the /tmp/\nThe to_do.txt file is just a note saying to remove anonymous login.\nThe removed_files.log file is a log for clean.sh\nWith nothing left to look at on the ftp port, I moved onto the smb service with another anonymous login.\nQuestion: There\u0026rsquo;s a share on the user\u0026rsquo;s computer. What\u0026rsquo;s it called? Answer: pics\nI accessed the pics share.\nI grabbed by images and used stegseek to crack any possible steganography passwords.\nDespite trying 10million passwords none worked so I assumed there was nothing hidden in the images.\nI knew the scripts directory was writeable so I edited change.sh to include a reverse shell.\nI then uploaded that to the scripts directory\nI set up netcat to listen for the reverse shell and gained user access.\nThen I stabilised the shell.\nI got the user flag\nQuestion: user.txt Answer: 90d6f992585815ff991e68748c414740\nI looked for suid bits.\n/usr/bin/env stood out to me so I looked it up on gtfobins\nRunning /usr/bin/env /bin/sh -p gave me root.\nQuestion: flag.txt Answer: 4d930091c31a622a7ed10f27999af363\n","date":"2022-10-09T09:05:03-04:00","permalink":"https://ben-doyle44.github.io/p/anonymous/","title":"Anonymous"},{"content":"I started the the box with a simple nmap scan to know what ports were open and what was running on them.\nIt shows 3 ports open, 21(ftp), 80(http) and 2222(ssh).\nQuestion: How many services are running under port 1000? Answer: 2\nQuestion: What is running on the higher port? Answer: ssh\nAs shown by the nmap scan the ftp port has anonymous login enabled. I looked at that first.\nUpon logging into the ftp service, I found a directory called \u0026ldquo;pub\u0026rdquo; and within that a text file called \u0026ldquo;ForMitch.txt\u0026rdquo;. I used the \u0026ldquo;get\u0026rdquo; command to copy the file onto my local machine.\nThe \u0026ldquo;ForMitch.txt\u0026rdquo; file alludes to a weak password for the system user.\nNothing more to be found with the ftp login, so I moved onto the website running on port 80. What\u0026rsquo;s found at first is the default apache2 page.\nSo I started enumarting the website using gobuster to find directories.\n/simple seems interesting. It shows a cms homepage and at the bottom it displays which version of the cms software it is using.\nI searched for known vulnerabilities on that version and found this. It contains a working exploit written in python.\nCVE-2019–9053\nQuestion: What’s the CVE you’re using against the application? Answer: CVE-2019–9053\nQuestion: To what kind of vulnerability is the application vulnerable? Answer: Sqli\nI ran the python script with these paramaters:\nIt managed to find the username, email and password.\nQuestion: What\u0026rsquo;s the password? Answer: secret\nI\u0026rsquo;ll try to login in via ssh with these credentials.\nIt\u0026rsquo;s sucessful so I\u0026rsquo;ll now try to find the user flag.\nQuestion: What\u0026rsquo;s the user flag? Answer: G00d j0b, keep up!\nQuestion: Is there any other user in the home directory? What’s its name? Answer: sunbath\nI used sudo -l to see what mitch is able to run.\nAs vim can run as sudo, I looked at vim on gtfobins\nQuestion: What can you leverage to spawn a privileged shell? Answer: vim\nI used sudo vim -c \u0026lsquo;:!/bin/sh\u0026rsquo; to get root and then read the root flag in root/root.txt\nQuestion: What\u0026rsquo;s the root flag? Answer: W3ll d0n3. You made it!\n","date":"2022-10-08T13:15:46-04:00","permalink":"https://ben-doyle44.github.io/p/simplectf/","title":"SimpleCTF"}]